apiVersion: cloudcredential.openshift.io/v1
kind: CredentialsRequest
metadata:
  name: openshift-gcp-ccm
  namespace: openshift-cloud-credential-operator
  annotations:
    capability.openshift.io/name: CloudCredential+CloudControllerManager
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
spec:
  serviceAccountNames:
  - cloud-controller-manager
  secretRef:
    name: gcp-ccm-cloud-credentials
    namespace: openshift-cloud-controller-manager
  providerSpec:
    apiVersion: cloudcredential.openshift.io/v1
    kind: GCPProviderSpec
    permissions:
    - "compute.addresses.create"
    - "compute.addresses.delete"
    - "compute.addresses.get"
    - "compute.addresses.list"
    - "compute.firewalls.get"
    - "compute.firewalls.update"
    - "compute.forwardingRules.create"
    - "compute.forwardingRules.delete"
    - "compute.forwardingRules.get"
    - "compute.healthChecks.create"
    - "compute.healthChecks.delete"
    - "compute.healthChecks.get"
    - "compute.healthChecks.update"
    - "compute.httpHealthChecks.create"
    - "compute.httpHealthChecks.delete"
    - "compute.httpHealthChecks.get"
    - "compute.httpHealthChecks.update"
    - "compute.instanceGroups.create"
    - "compute.instanceGroups.delete"
    - "compute.instanceGroups.get"
    - "compute.instanceGroups.update"
    - "compute.instances.get"
    - "compute.instances.use"
    - "compute.regionBackendServices.create"
    - "compute.regionBackendServices.delete"
    - "compute.regionBackendServices.get"
    - "compute.regionBackendServices.update"
    - "compute.targetPools.addInstance"
    - "compute.targetPools.create"
    - "compute.targetPools.delete"
    - "compute.targetPools.get"
    - "compute.targetPools.removeInstance"
    - "compute.zones.list"

    # If set to true, don't check whether the requested
    # roles have the necessary services enabled
    skipServiceCheck: true
