kind: Deployment
apiVersion: apps/v1
metadata:
  name: azure-cloud-controller-manager
  namespace: openshift-cloud-controller-manager
  labels:
    k8s-app: azure-cloud-controller-manager
    infrastructure.openshift.io/cloud-controller-manager: {{ .cloudproviderName }}
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: azure-cloud-controller-manager
      infrastructure.openshift.io/cloud-controller-manager: {{ .cloudproviderName }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        k8s-app: azure-cloud-controller-manager
        infrastructure.openshift.io/cloud-controller-manager: {{ .cloudproviderName }}
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    spec:
      hostNetwork: true
      serviceAccountName: cloud-controller-manager
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  k8s-app: azure-cloud-controller-manager
                  infrastructure.openshift.io/cloud-controller-manager: {{ .cloudproviderName }}
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          operator: Exists
        - effect: NoSchedule
          key: node.kubernetes.io/not-ready
          operator: Exists
      initContainers:
        - name: azure-inject-credentials
          image: {{ .images.Operator }}
          command:
            - /azure-config-credentials-injector
          args:
            - --cloud-config-file-path=/tmp/cloud-config/cloud.conf
            - --output-file-path=/tmp/merged-cloud-config/cloud.conf
            - --creds-path=/etc/azure/credentials
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - name: config-accm
              mountPath: /tmp/cloud-config
              readOnly: true
            - name: cloud-config
              mountPath: /tmp/merged-cloud-config
            - name: cloud-sa-volume
              mountPath: /etc/azure/credentials
              readOnly: true
      containers:
        - name: cloud-controller-manager
          image: {{ .images.CloudControllerManager }}
          imagePullPolicy: "IfNotPresent"
          env:
            - name: CLOUD_CONFIG
              value: /etc/cloud-config/cloud.conf
            - name: OCP_INFRASTRUCTURE_NAME
              value: {{ .infrastructureName }}
            - name: AZURE_ENVIRONMENT_FILEPATH
              value: /etc/cloud-config-original/endpoints.conf
          resources:
            requests:
              cpu: 200m
              memory: 50Mi
          ports:
          - containerPort: 10258
            name: https
            protocol: TCP
          command:
            - /bin/bash
            - -c
            - |
              #!/bin/bash
              set -o allexport
              if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
                source /etc/kubernetes/apiserver-url.env
              fi
              exec /bin/azure-cloud-controller-manager \
                --v=6 \
                --cloud-config=$(CLOUD_CONFIG) \
                --cloud-provider=azure \
                --controllers=*,-cloud-node \
                --configure-cloud-routes=false \
                --use-service-account-credentials=true \
                --bind-address=127.0.0.1 \
                --cluster-name=$(OCP_INFRASTRUCTURE_NAME) \
                --leader-elect=true \
                --leader-elect-lease-duration=137s \
                --leader-elect-renew-deadline=107s \
                --leader-elect-retry-period=26s \
                --leader-elect-resource-namespace=openshift-cloud-controller-manager \
                --secure-port=0
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - name: host-etc-kube
              mountPath: /etc/kubernetes
              readOnly: true
            - name: config-accm
              mountPath: /etc/cloud-config-original
              readOnly: true
            - name: cloud-config
              mountPath: /etc/cloud-config
              readOnly: true
            - name: trusted-ca
              mountPath: /etc/pki/ca-trust/extracted/pem
              readOnly: true
      volumes:
        - name: config-accm
          configMap:
            name: cloud-conf
            items:
              - key: cloud.conf
                path: cloud.conf
              - key: endpoints
                path: endpoints.conf
        - name: host-etc-kube
          hostPath:
            path: /etc/kubernetes
            type: Directory
        - name: cloud-sa-volume
          secret:
            secretName: azure-cloud-credentials
        - name: trusted-ca
          configMap:
            name: ccm-trusted-ca
            items:
              - key: ca-bundle.crt
                path: tls-ca-bundle.pem
        - name: cloud-config
          emptyDir: {}
